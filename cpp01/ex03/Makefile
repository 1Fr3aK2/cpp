SRCS =	src/Weapon.cpp\
		src/main.cpp \
		src/HumanA.cpp\
		src/HumanB.cpp
		
NAME = Violence

COMPRESS = ar rcs

RM = rm -f

CC = c++

CFLAGS = -Wall -Wextra -Werror -g -std=c++98 -I./includes

OBJ_DIR = obj

# Lista de arquivos .o correspondentes aos .cpp
OBJS = $(SRCS:src/%.cpp=$(OBJ_DIR)/%.o)

RESET   = \033[0m
GREEN   = \033[32m
YELLOW  = \033[33m
BLUE    = \033[34m
RED     = \033[31m

all: $(NAME) $(LIBFT)

# Regra para criar o executável a partir dos arquivos objeto e bibliotecas
$(NAME): $(OBJS)
	@echo "$(YELLOW)compiling $(NAME) ...$(RESET)"
	@$(CC) $(CFLAGS) -o $(NAME) $(OBJS)
	@echo "$(GREEN)$(NAME) ready! $(RESET)"

# Regra para compilar arquivos objeto a partir de arquivos fonte, cria a pasta para o arq obj se nao existir
$(OBJ_DIR)/%.o: src/%.cpp | $(CREATE_DIR)
	@mkdir -p $(@D)
	@echo "$(BLUE)making objs directorys!$(RESET)"
	@$(CC) $(CFLAGS) -c $< -o $@

$(CREATE_DIR):
	@mkdir -p $(OBJ_DIR)/src

v: re
	valgrind --leak-check=full --track-fds=yes --show-leak-kinds=all --track-origins=yes --show-reachable=yes ./$(NAME)

clean:
	@echo "$(RED)cleaning objs ...$(RESET)"
	@$(RM) -r $(OBJ_DIR)    # Remove o diretório obj e seu conteúdo
	@echo "$(RED)objs && libs cleaned! $(RESET)"

fclean: clean
	@$(RM) $(NAME)  # Remove o executável
	@echo "$(RED)$(NAME) removed! $(RESET)"

re: fclean all

.PHONY: all clean fclean re% 